####################################################################
#  Install/Setup OSQUery
####################################################################
- name: Add OSQuery repo key for Ubuntu
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: 1484120AC4E9F8A1A577AEEE97A80C63C9D8B80B
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Add OSquery repo for Ubuntu
  apt_repository:
    repo: deb [arch=amd64] https://pkg.osquery.io/deb deb main
    state: present
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Install OSQuery
  package:
    name: osquery
    state: installed

- name: Get cert for Doorman
  shell: python3 -c "import ssl; print (ssl.get_server_certificate(('{{ fleet_hostname }}.{{ base_domain }}', 443)))" | sudo tee /etc/osquery/certificate.crt

- name: Copy OSQuery flags file
  template:
    src: conf/agents/osquery.flags
    dest: /etc/osquery/osquery.flags
    owner: root
    group: root
    mode: '0600'

- name: Copy OSQuery secret
  template:
    src: conf/agents/osquery.key
    dest: /etc/osquery/osquery.key
    owner: root
    group: root
    mode: '0600'

- name: Enable OSQuery service
  service:
    name: osqueryd
    state: restarted
    enabled: yes

####################################################################
# Slack notification
####################################################################
- name: Send slack notification when done
  slack:
    token: "{{ slack_token }}"
    msg: '{{ ansible_nodename }}:{{ ansible_default_ipv4.address }} - Finished setting OSQuery agent on {{ ansible_nodename }}'
    channel: "{{ slack_channel }}"
  when: slack_token is undefined
